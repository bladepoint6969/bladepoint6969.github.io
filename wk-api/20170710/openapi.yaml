---
openapi: 3.0.2
info:
  title: WaniKani API
  version: v2 Revision 20170710
servers:
  - url: https://api.wanikani.com/v2
security:
  - apiKey: []
tags:
  - name: Assignments
paths:
  /assignments:
    get:
      description: |
        Returns a collection of all assignments, ordered by ascending `created_at`, 500 at a time.
      parameters:
        - $ref: '#/components/parameters/ifModifiedSince'
        - $ref: '#/components/parameters/pageBeforeId'
        - $ref: '#/components/parameters/pageAfterId'
        - description: Only assignments available at or after this time are returned.
          in: query
          name: available_after
          schema:
            format: date-time
            type: string
        - description: Only assignments available at or before this time are returned.
          in: query
          name: available_before
          schema:
            format: date-time
            type: string
        - description: When set to `true`, returns assignments that have a value in `data.burned_at`. Returns assignments with a `null` `data.burned_at` if `false`.
          in: query
          name: burned
          schema:
            type: boolean
        - description: Return assignments with a matching value in the `hidden` attribute
          in: query
          name: hidden
          schema:
            type: boolean
        - description: Only assignments where `data.id` matches one of the array values are returned.
          explode: false
          in: query
          name: ids
          schema:
            items:
              format: int32
              type: integer
            type: array
        - allowEmptyValue: true
          description: Returns assignments which are immediately available for lessons
          in: query
          name: immediately_available_for_lessons
          schema:
            type: string
        - allowEmptyValue: true
          description: Returns assignments which are immediately available for review
          in: query
          name: immediately_available_for_review
          schema:
            type: string
        - allowEmptyValue: true
          description: Returns assignments which are in the review state
          in: query
          name: in_review
          schema:
            type: string
        - description: Only assignments where the associated subject level matches one of the array values are returned.
          explode: false
          in: query
          name: levels
          schema:
            items:
              format: int32
              maximum: 60
              minimum: 1
              type: integer
            type: array
        - description: Only assignments where `data.srs_stage` matches one of the array values are returned.
          explode: false
          in: query
          name: srs_stages
          schema:
            items:
              format: int32
              maximum: 9
              minimum: 0
              type: integer
            type: array
        - description: When set to `true`, returns assignments that have a value in `data.started_at`. Returns assignments with a `null` `data.started_at` if `false`.
          in: query
          name: started
          schema:
            type: boolean
        - description: Only assignments where `data.subject_id` matches one of the array values are returned.
          explode: false
          in: query
          name: subject_ids
          schema:
            items:
              format: int32
              type: integer
            type: array
        - description: Only assignments where `data.subject_type` matches one of the array values are returned.
          explode: false
          in: query
          name: subject_types
          schema:
            items:
              $ref: '#/components/schemas/subjectType'
            type: array
        - description: When set to `true`, returns assignments that have a value in `data.unlocked_at`. Returns assignments with a `null` `data.unlocked_at` if `false`.
          in: query
          name: unlocked
          schema:
            type: boolean
        - description: Only assignments updated after this time are returned.
          in: query
          name: updated_after
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assignmentCollection'
          description: Successfully returned an assignment collection
          headers:
            Last-Modified:
              $ref: '#/components/headers/lastModified'
      tags:
        - Assignments
  /assignments/{id}:
    get:
      description: Retrieves a specific assignment by its `id`.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assignmentResource'
          description: Successfully returned an assignment resource
          headers:
            Last-Modified:
              $ref: '#/components/headers/lastModified'
      tags:
        - Assignments
    parameters:
      - description: Unique identifier of the assignment.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
  /assignments/{id}/start:
    parameters:
      - description: Unique identifier of the assignment.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
    put:
      description: |
        Mark the assignment as started, moving the assignment from the lessons queue to the review queue. Returns the updated assignment.

        API token used must have been created with the `assignments:start` permission.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assignmentStart'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assignmentResource'
          description: Successfully started an assignment
          headers:
            Last-Modified:
              $ref: '#/components/headers/lastModified'
      tags:
        - Assignments
components:
  headers:
    lastModified:
      description: Date and time resource was last modified
      schema:
        type: string
  parameters:
    ifModifiedSince:
      in: header
      name: If-Modified-Since
      schema:
        type: string
    pageAfterId:
      in: query
      name: page_after_id
      schema:
        format: int32
        type: integer
    pageBeforeId:
      in: query
      name: page_before_id
      schema:
        format: int32
        type: integer
    wanikaniRevision:
      in: header
      name: Wanikani-Revision
      required: true
      schema:
        enum:
          - 20170710
        type: string
  responses:
    401Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: Unauthorized to make this request. You probably didn't send a valid API key
    403Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: Not allowed to make this request. Your API token doesn't have the correct permissions.
    404Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: Our old friend 404. The resource you requested doesn't exist
    422Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: Something about your request was malformed.
    429Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: You've made too many requests in the past minute. You're allowed up to 60
    500Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: Something broke on the server side. It's our fault, not yours. Try again, and if it keeps happening, let us know!
    503Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: The API is down at the moment. Try again later
    assignmentResource:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/assignmentResource'
      description: Successfully returned an assignment resource
      headers:
        Last-Modified:
          $ref: '#/components/headers/lastModified'
  schemas:
    assignmentCollection:
      allOf:
        - $ref: '#/components/schemas/collectionResponse'
        - properties:
            data:
              items:
                $ref: '#/components/schemas/assignmentType'
              type: array
    assignmentResource:
      allOf:
        - $ref: '#/components/schemas/resourceResponse'
        - properties:
            data:
              $ref: '#/components/schemas/assignmentType'
    assignmentStart:
      properties:
        started_at:
          description: |
            - If not set, `started_at` will default to the time the request is made.
            - `started_at` must be greater than or equal to `unlocked_at`.
          format: date-time
          type: string
      type: object
    assignmentType:
      properties:
        available_at:
          description: Timestamp when the related subject will be available in the user's review queue.
          format: date-time
          nullable: true
          type: string
        burned_at:
          description: Timestamp when the user reaches SRS stage `9` the first time.
          format: date-time
          nullable: true
          type: string
        created_at:
          description: Timestamp when the assignment was created.
          format: date-time
          type: string
        hidden:
          description: Indicates if the associated subject has been hidden, preventing it from appearing in lessons or reviews.
          type: boolean
        passed_at:
          description: Timestamp when the user reaches SRS stage `5` for the first time.
          format: date-time
          nullable: true
          type: string
        resurrected_at:
          description: Timestamp when the subject is resurrected and placed back in the user's review queue.
          format: date-time
          nullable: true
          type: string
        srs_stage:
          description: The current SRS stage interval. The interval range is determined by the related subject's spaced repetition system.
          format: int32
          type: integer
        started_at:
          description: Timestamp when the user completes the lesson for the related subject.
          format: date-time
          nullable: true
          type: string
        subjectType:
          $ref: '#/components/schemas/subjectType'
        subject_id:
          description: Unique identifier of the associated subject.
          format: int32
          type: integer
        unlocked_at:
          description: |
            The timestamp when the related subject has its prerequisites satisfied and is made available in lessons.
            Prerequisites are:

            - The subject components have reached SRS stage `5` once (they have been "passed").
            - The user's level is equal to or greater than the level of the assignment’s subject.
          format: date-time
          nullable: true
          type: string
      type: object
    baseResponse:
      properties:
        data_updated_at:
          format: date-time
          type: string
        object:
          $ref: '#/components/schemas/objectType'
        url:
          format: url
          type: string
      type: object
    collectionResponse:
      allOf:
        - $ref: '#/components/schemas/baseResponse'
        - properties:
            pages:
              properties:
                next_url:
                  format: url
                  nullable: true
                  type: string
                per_page:
                  format: int32
                  type: integer
                previous_url:
                  format: url
                  nullable: true
                  type: string
              type: object
            total_count:
              format: int32
              type: integer
    errorResponse:
      properties:
        code:
          format: int32
          type: integer
        error:
          type: string
      type: object
    objectType:
      description: Describes the type of object that is being returned
      enum:
        - collection
        - report
        - assignment
        - kanji
        - level_progression
        - radical
        - reset
        - review_statistic
        - review
        - spaced_repitition_system
        - study_material
        - user
        - vocabulary
      type: string
    resourceResponse:
      allOf:
        - $ref: '#/components/schemas/baseResponse'
        - properties:
            id:
              format: int32
              type: integer
    subjectType:
      description: 'The type of the associated subject, one of: kanji, radical, or vocabulary.'
      enum:
        - kanji
        - radical
        - vocabulary
      type: string
  securitySchemes:
    apiKey:
      bearerFormat: v2 API key
      scheme: bearer
      type: http
